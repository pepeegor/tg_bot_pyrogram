name: Create ZIP Archive and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Необходим для работы с тегами

    - name: Get latest tag
      id: get_tag
      run: |
        # Получаем последний тег или используем v0.0.0 по умолчанию
        TAG=$(git describe --tags `git rev-list --tags --max-count=1` || echo "v0.0.0")
        echo "LATEST_TAG=$TAG" >> $GITHUB_ENV
        
        # Извлекаем числовую часть версии (например, 1.0.0)
        VERSION=$(echo $TAG | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')
        
        # Разделяем версию на части
        MAJOR=$(echo $VERSION | cut -d. -f1)
        MINOR=$(echo $VERSION | cut -d. -f2)
        PATCH=$(echo $VERSION | cut -d. -f3)
        
        # Увеличиваем PATCH (последнюю часть версии)
        NEW_PATCH=$((PATCH + 1))
        
        # Формируем новую версию
        NEW_VERSION="v$MAJOR.$MINOR.$NEW_PATCH"
        
        # Сохраняем новую версию в окружение
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
      
    - name: Create new tag
      run: |
        git tag ${{ env.NEW_VERSION }}
        git push origin ${{ env.NEW_VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create ZIP archive
      run: |
        zip -r tg_bot.zip ./* -x "*.git*" ".env" ".gitignore" "credentials.json" ".github/**"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NEW_VERSION }}
        release_name: "tg_bot release ${{ env.NEW_VERSION }}"
        draft: false
        prerelease: false

    - name: Upload ZIP to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: tg_bot.zip
        asset_name: tg_bot.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}